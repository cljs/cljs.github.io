<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ClojureScript</title><description>ClojureScript News and Releases</description><link>http://cljsinfo.github.io/news</link><atom:link href="http://cljsinfo.github.io/news/feed.xml" rel="self" type="application/rss+xml" /><pubDate>Fri, 02 Sep 2016 16:33:44 GMT</pubDate><lastBuildDate>Fri, 02 Sep 2016 16:33:44 GMT</lastBuildDate><generator>(sitegen.news/rss-feed-xml)</generator><item><title>1.9.227 - cljs.spec fixes</title><description>&lt;p&gt;A bug fix release for cljs.spec and a REPL regression.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1759&quot;&gt;CLJS-1759&lt;/a&gt;: Errors writing transit analysis cache if parallel build&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1760&quot;&gt;CLJS-1760&lt;/a&gt;: Self-host: test-cljs-1757 failing in test-self-parity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1751&quot;&gt;CLJS-1751&lt;/a&gt;: port fix lost type hints in map destructuring&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1756&quot;&gt;CLJS-1756&lt;/a&gt;: Add test.check JAR to the bootstrap script&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1757&quot;&gt;CLJS-1757&lt;/a&gt;: cljs.spec/exercise-fn doesn&amp;#39;t work when passed a quoted symbol&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1754&quot;&gt;CLJS-1754&lt;/a&gt;: Add boolean? generator&lt;/li&gt;
&lt;li&gt;fix REPL regression which removed warnings&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 19 Aug 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.227</link></item><item><title>1.9.216 - cljs.spec fixes</title><description>&lt;p&gt;This release addresses a few bugs around cljs.spec discovered in the
last release along with relevant fixes for self-hosted ClojureScript.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1746&quot;&gt;CLJS-1746&lt;/a&gt;: Log the result of loading a dependency&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1657&quot;&gt;CLJS-1657&lt;/a&gt;: Self-host: Implicit macro loading with alias&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1742&quot;&gt;CLJS-1742&lt;/a&gt;: Add docstring for new refer-clojure REPL special&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1274&quot;&gt;CLJS-1274&lt;/a&gt;: Allow assignment to namespace-qualified names in current namespace&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1744&quot;&gt;CLJS-1744&lt;/a&gt;: rest produces nil for larger maps&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1740&quot;&gt;CLJS-1740&lt;/a&gt;: Self-host: Need to port more of &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1733&quot;&gt;CLJS-1733&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1741&quot;&gt;CLJS-1741&lt;/a&gt;: Add :rename to :refer-clojure in ns docstring&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1737&quot;&gt;CLJS-1737&lt;/a&gt;: Self-host: clojure alias implicit macro use regression&lt;/li&gt;
&lt;li&gt;invalid cljs.spec/merge res call&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1739&quot;&gt;CLJS-1739&lt;/a&gt;: seq on map literal with 9 elements leads to rest producing nil&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1738&quot;&gt;CLJS-1738&lt;/a&gt;: Self-host: need to update call to check-use-macros-inferring-missing&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Mon, 15 Aug 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.216</link></item><item><title>1.9.198 - cljs.spec, core ns aliasing, macro inference, :rename, and more!</title><description>&lt;p&gt;This release brings cljs.spec to parity with Clojure
1.9.0-alpha10. This release also includes a large number of
enhancements to the ns form:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;:refer now features macro inference. There is no longer any need
to supply both :refer and :refer-macros in the same :require, the
compiler will figure it out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;clojure.* namespaces will now automatically be aliased to their
ClojureScript equivalents. For example this means that the following
is perfectly valid ClojureScript:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;lang-clj&quot;&gt;(&lt;span class=&quot;hljs-name&quot;&gt;&lt;span class=&quot;hljs-builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; foo.bar
  (&lt;span class=&quot;hljs-symbol&quot;&gt;:require&lt;/span&gt; [clojure.spec &lt;span class=&quot;hljs-symbol&quot;&gt;:refer&lt;/span&gt; [fspec]]))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;  This feature and the previous one should significantly reduce reader
  conditional usage in ns forms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;thanks to Antonio Monteiro we now support :rename&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also have a new feature that is relevant for tooling such as
Figwheel and cljs-devtools - :preloads. This should now be the
standard way to inject some bit of side-effecting setup after core but
before user code (i.e. connecting REPLs to standard ports, etc.).&lt;/p&gt;
&lt;p&gt;There are of course many various small fixes and enhancements, so
a very big thank you to everyone that has contributed.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1508&quot;&gt;CLJS-1508&lt;/a&gt;: Extend ns form to support :rename option&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1507&quot;&gt;CLJS-1507&lt;/a&gt;: Implicit macro loading: macro var inference in :refer&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1692&quot;&gt;CLJS-1692&lt;/a&gt;: Autoalias clojure.&lt;em&gt; to exisiting cljs.&lt;/em&gt; namespaces if
possible&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1350&quot;&gt;CLJS-1350&lt;/a&gt;: Compiler support for browser REPL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1729&quot;&gt;CLJS-1729&lt;/a&gt;: Support &lt;code&gt;use&lt;/code&gt; special function in REPLs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1730&quot;&gt;CLJS-1730&lt;/a&gt;: Support &lt;code&gt;refer-clojure&lt;/code&gt; special function in REPLs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1515&quot;&gt;CLJS-1515&lt;/a&gt;: Self-host: Allow :file key in cljs.js/&lt;em&gt;load-fn&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;add toString implementation to Vars&lt;/li&gt;
&lt;li&gt;Use a js array to create collections in cljs.reader&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1640&quot;&gt;CLJS-1640&lt;/a&gt;: Use the unshaded version of the closure compiler&lt;/li&gt;
&lt;li&gt;add :browser-repl to list of known opts&lt;/li&gt;
&lt;li&gt;add browser REPL preload&lt;/li&gt;
&lt;li&gt;parity with Clojure 1.9.0-alpha10 clojure.spec&lt;/li&gt;
&lt;li&gt;bump to tools.reader 1.0.0-beta3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1733&quot;&gt;CLJS-1733&lt;/a&gt;: Macro inference issue for macros &amp;amp; runtime vars with the same name&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1735&quot;&gt;CLJS-1735&lt;/a&gt;: Self-host: cljs.spec speced-vars instance&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1736&quot;&gt;CLJS-1736&lt;/a&gt;: cljs.spec.test: checkable-syms* called with 0-arity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1708&quot;&gt;CLJS-1708&lt;/a&gt;: Self-host: [iu]nstrument-1 needs to qualify [iu]nstrument-1*&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1707&quot;&gt;CLJS-1707&lt;/a&gt;: Self-host: with-instrument-disabled needs to qualify &lt;em&gt;instrument-enabled&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1732&quot;&gt;CLJS-1732&lt;/a&gt;: Add docstrings for new use and use-macros REPL specials&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1720&quot;&gt;CLJS-1720&lt;/a&gt;: Qualify symbols and namespaced keywords in spec macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1731&quot;&gt;CLJS-1731&lt;/a&gt;: Self-host: do_template problem with script/test-self-parity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1556&quot;&gt;CLJS-1556&lt;/a&gt;: Invalid code emit for obj literal&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1607&quot;&gt;CLJS-1607&lt;/a&gt;: bug with &lt;code&gt;specify!&lt;/code&gt; in JS prototypes with &lt;code&gt;static-fns&lt;/code&gt; true&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1591&quot;&gt;CLJS-1591&lt;/a&gt; avoid analyzing invoke arguments multiple times&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1638&quot;&gt;CLJS-1638&lt;/a&gt;: :elide-asserts disables atom validators in :advanced&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1721&quot;&gt;CLJS-1721&lt;/a&gt;: 3-arity get-in fails on types which do not implement ILookup&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1728&quot;&gt;CLJS-1728&lt;/a&gt;: Update doc for ns for new :rename capability&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1727&quot;&gt;CLJS-1727&lt;/a&gt;: Regression when evaluating non-sequential forms at the REPL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1490&quot;&gt;CLJS-1490&lt;/a&gt;: Watch macro files in cljs.build.api/watch&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1719&quot;&gt;CLJS-1719&lt;/a&gt;: Port destructuring namespaced keys and symbols&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1653&quot;&gt;CLJS-1653&lt;/a&gt;: cljs.spec: keys* causes exception&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1700&quot;&gt;CLJS-1700&lt;/a&gt;: Support clojure.* aliasing when not in vector&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1717&quot;&gt;CLJS-1717&lt;/a&gt; remove map from equiv-map&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1716&quot;&gt;CLJS-1716&lt;/a&gt;: No longer possible to use same alias for :require-macros and :require&lt;/li&gt;
&lt;li&gt;Use keyword options in js-&amp;gt;clj 1-arg impl&lt;/li&gt;
&lt;li&gt;Add support for regex in transit for compiler analysis cache&lt;/li&gt;
&lt;li&gt;Escape non-Latin1 characters before base64 encoding the source-map string&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1698&quot;&gt;CLJS-1698&lt;/a&gt;: cljs.spec: every res call needs &amp;amp;env&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1695&quot;&gt;CLJS-1695&lt;/a&gt;: Self-host: Port cljs / clojure namespace aliasing&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1697&quot;&gt;CLJS-1697&lt;/a&gt;: doc on inferred macros fails&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1699&quot;&gt;CLJS-1699&lt;/a&gt;: Update docstring for ns&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1694&quot;&gt;CLJS-1694&lt;/a&gt;: Self-host: Port macro var inference in :refer&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 12 Aug 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.198</link></item><item><title>1.9.89 - cljs.spec & :preloads</title><description>&lt;p&gt;This release fixes several cljs.spec issues. It also includes a new
compiler option - :preloads. This feature is designed to simplify (but
not limited to) the loading of development time side effects such as
enabling printing, REPL connections, and browser tool
integration. With :preloads you may now specify a sequence of
namespaces as symbols to load in order immediately after cljs.core. This also
means there&amp;#39;s a path for providing typical boilerplate as documented
namespaces that users can specify in their dev builds.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1688&quot;&gt;CLJS-1688&lt;/a&gt;: :preloads compiler option for loading other entry points prior to :main&lt;/li&gt;
&lt;li&gt;cljs.spec - support gen overrides by name in addition to path&lt;/li&gt;
&lt;li&gt;cljs.spec - every and every-kv&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;added bounded-count&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;missing cljs.spec/fn-specs -&amp;gt; cljs.spec/get-spec in cljs.spec.test ns&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1687&quot;&gt;CLJS-1687&lt;/a&gt;: Self-host: cljs.spec: inst-in-range? and int-in-range? need qualification&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1668&quot;&gt;CLJS-1668&lt;/a&gt;: cljs.spec: c alias needs expansion in int-in&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Wed, 22 Jun 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.89</link></item><item><title>1.9.76</title><description>&lt;p&gt;This release brings cljs.spec to parity with Clojure 1.9.0-alpha7. It
addresses an issue with Transit analysis caching, includes fixes for
cljs.spec support under bootstrapped, bumps the Closure library
dependency, and includes other minor fixes and enhancements.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1648&quot;&gt;CLJS-1648&lt;/a&gt;: Getting Source Info into ex-info data for Analysis Errors&lt;/li&gt;
&lt;li&gt;cljs.spec updated to Clojure 1.9.0-alpha7 changes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;bump Google Closure Library dep&lt;/li&gt;
&lt;li&gt;AOT cljs.spec nses&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1679&quot;&gt;CLJS-1679&lt;/a&gt;: Self-host: Incorporate spec tests&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1680&quot;&gt;CLJS-1680&lt;/a&gt;: Self-host: Don&amp;#39;t require items no longer provided by Closure&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1654&quot;&gt;CLJS-1654&lt;/a&gt;: cljs.spec: var name in s/fdef non-conformance&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1655&quot;&gt;CLJS-1655&lt;/a&gt;: cljs.spec: conformer docstring indicates :clojure.spec/invalid&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1656&quot;&gt;CLJS-1656&lt;/a&gt;: Self-host: cljs.spec: speced-vars* fn not resolving&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1661&quot;&gt;CLJS-1661&lt;/a&gt;: cljs.spec: non-spec&amp;#39;ed fn var printing&lt;/li&gt;
&lt;li&gt;compute read/write opts for transit if possible, handle JSValue&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1660&quot;&gt;CLJS-1660&lt;/a&gt;: cljs.spec: Always return var from instrument / unstrument&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1671&quot;&gt;CLJS-1671&lt;/a&gt;: Bad cljs.spec interactive instrumentation session&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1664&quot;&gt;CLJS-1664&lt;/a&gt;: The filename aux.cljs is a problem on windows.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1667&quot;&gt;CLJS-1667&lt;/a&gt;: bad describe* for and-spec-impl&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1699&quot;&gt;CLJS-1699&lt;/a&gt;: Self-host: s/fdef ns-qualify &lt;em&gt;ns&lt;/em&gt; name field access&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 17 Jun 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.76</link></item><item><title>1.9.36 - cljs.spec fixes & performance enhancements</title><description>&lt;p&gt;This release fixes a cljs.spec bug around instrumented multi-arity
fns. It also includes various fixes and performance enhancements from
Clojure. Another performance related change is writing out analysis
caches as Transit if transit-clj is available. This is automatic and
requires no configuration and gives a modest speed bump when launching
REPLs.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Write analysis caches as Transit if transit-clj available&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clojure &lt;a href=&quot;https://github.com/clojure/clojure/commit/1f25347a7b219488d5d9f8d17b04f2cc7828b30e&quot;&gt;1f25347&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clojure &lt;a href=&quot;https://github.com/clojure/clojure/commit/47b8d6b47a7c87272334c77878b92fd988448c41&quot;&gt;47b8d6b&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Optimize seq (&amp;amp;) destructuring as per commit (&lt;a href=&quot;https://github.com/clojure/clojure/commit/0aa346766c4b065728cde9f9fcb4b2276a6fe7b5&quot;&gt;0aa3467&lt;/a&gt;) of Clojure&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1611&quot;&gt;CLJS-1611&lt;/a&gt;: Function arity dispatch returns arity&lt;/li&gt;
&lt;li&gt;only print specs in REPL if we actually have some&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1663&quot;&gt;CLJS-1663&lt;/a&gt;: Calling instrumented multi-arity function causes exception&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1650&quot;&gt;CLJS-1650&lt;/a&gt;: &lt;code&gt;cljs.reader/read-map&lt;/code&gt; now returns array-map/hash-map based on the size of the sequence.&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 03 Jun 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.36</link></item><item><title>1.9.14 - clojure.spec port</title><description>&lt;p&gt;This release includes a complete and faithful port of clojure.spec to
ClojureScript. The functionality resides in the new cljs.spec
namespace. All features present in Clojure 1.9.0-alpha4 are
implemented, including REPL support, testing support and macro
checking.&lt;/p&gt;
&lt;p&gt;As always feedback welcome.&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;clojure.spec ported to cljs.spec&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1649&quot;&gt;CLJS-1649&lt;/a&gt;: Possible issue with in cljs.reader or cljs.core/PersistentHashMap&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1647&quot;&gt;CLJS-1647&lt;/a&gt;: Rethrow exception from parallel-build&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1642&quot;&gt;CLJS-1642&lt;/a&gt;: cljs.core/reductions does not respect &amp;#39;reduced&amp;#39;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1635&quot;&gt;CLJS-1635&lt;/a&gt;: Var type implements IEquiv but not IHash&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1629&quot;&gt;CLJS-1629&lt;/a&gt;: Fix warning about duplicate test-pr-str&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1637&quot;&gt;CLJS-1637&lt;/a&gt;: Missing docstrings for a few vars&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Wed, 01 Jun 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.14</link></item><item><title>1.8.51</title><description>&lt;p&gt;This release updates the Closure Compiler and tools.reader dependencies, fixes a race condition with :parallel-build, improves JS module integration, and includes a number of enhancements and fixes around optional self hosting. A big thanks to everyone who contributed!&lt;/p&gt;
&lt;p&gt;As always feedback welcome.&lt;/p&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;bump Closure Compiler to v20160315&lt;/li&gt;
&lt;li&gt;bump tools.reader to 1.0.0-beta1&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1624&quot;&gt;CLJS-1624&lt;/a&gt;: Avoid useage of JSC_HOME in test bash scripts&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1626&quot;&gt;CLJS-1626&lt;/a&gt;: cljs.test for bootstrap&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1588&quot;&gt;CLJS-1588&lt;/a&gt;: defrecord satisfies? behavior under bootstrap&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1632&quot;&gt;CLJS-1632&lt;/a&gt;: docs / arglist consistency&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1612&quot;&gt;CLJS-1612&lt;/a&gt;: Resolve ns aliases in syntax-quote&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1621&quot;&gt;CLJS-1621&lt;/a&gt;: Foreign libs modules of different types don&amp;#39;t compile together&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1617&quot;&gt;CLJS-1617&lt;/a&gt;: inlined &lt;code&gt;list&lt;/code&gt; evaluation order&lt;/li&gt;
&lt;li&gt;:parallel-build race condition&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Mon, 25 Apr 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.8.51</link></item><item><title>1.8.40</title><description>&lt;p&gt;This release addresses some minor unintentional interactions with 3rd party ClojureScript tooling like Figwheel.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1603&quot;&gt;CLJS-1603&lt;/a&gt;: Only warn for misspelled comp/REPL opts&lt;/li&gt;
&lt;li&gt;:warning-handlers missing for known compiler options&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1592&quot;&gt;CLJS-1592&lt;/a&gt;: Self-host: Robustness for core tests&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Mon, 28 Mar 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.8.40</link></item><item><title>1.8.34</title><description>&lt;p&gt;There are many minor fixes in this release around bootstrapped
ClojureScript. This release also fixes a subtle bug with the
new :parallel-build feature.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1582&quot;&gt;CLJS-1582&lt;/a&gt;: Type-hint extend-type first arg for primitives&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1590&quot;&gt;CLJS-1590&lt;/a&gt;: split, split-lines differs from Clojure on empty string&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1594&quot;&gt;CLJS-1594&lt;/a&gt;: NaN and both infinities cannot be elements of a set&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1597&quot;&gt;CLJS-1597&lt;/a&gt;: Redundant IPrintWithWriter test in pr-writer-impl&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1583&quot;&gt;CLJS-1583&lt;/a&gt;: (hash (symbol &amp;quot;/&amp;quot;)) does not match (hash &amp;#39;/)&lt;/li&gt;
&lt;li&gt;bump tools reader&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1492&quot;&gt;CLJS-1492&lt;/a&gt;: Warn when using :optimisations instead of :optimizations&lt;/li&gt;
&lt;li&gt;less cryptic error if :main doesn&amp;#39;t correspond to any file&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-744&quot;&gt;CLJS-744&lt;/a&gt;: ISequential types should implement JS indexOf, lastIndexOf&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1411&quot;&gt;CLJS-1411&lt;/a&gt;: make-array signature differs from clojure&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1589&quot;&gt;CLJS-1589&lt;/a&gt;: Self-host: case fail with nil&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1596&quot;&gt;CLJS-1596&lt;/a&gt;: Self-host: :load-macros and :analyze-deps don&amp;#39;t work in cljs.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1420&quot;&gt;CLJS-1420&lt;/a&gt;: get-in behavior differs from Clojure by always deferring to the 3 arity fn&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1585&quot;&gt;CLJS-1585&lt;/a&gt;: Self-host: Alias-scoped keywords&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1577&quot;&gt;CLJS-1577&lt;/a&gt;: Self-host: syntax-quote resolves on dot forms&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1564&quot;&gt;CLJS-1564&lt;/a&gt;: Self-host: cached macro &lt;em&gt;loaded&lt;/em&gt; update&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1584&quot;&gt;CLJS-1584&lt;/a&gt;: Self-host: core/str error with condp&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1521&quot;&gt;CLJS-1521&lt;/a&gt;: Self-host: Macro namespaces cannot be aliased&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1573&quot;&gt;CLJS-1573&lt;/a&gt;: Self-host: Invalid UTF escaping in cljs-in-cljs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1570&quot;&gt;CLJS-1570&lt;/a&gt;: :parallel-build causes invalid truth check in cljs.reader/read-number&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1568&quot;&gt;CLJS-1568&lt;/a&gt;: LazyTransformer doesn&amp;#39;t implement IMeta&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1578&quot;&gt;CLJS-1578&lt;/a&gt;: Corrupted Analysis Files Break Compilation&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1579&quot;&gt;CLJS-1579&lt;/a&gt;: cljs.source-map/invert-reverse-map discards gcol&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1580&quot;&gt;CLJS-1580&lt;/a&gt;: Self-host: goog.provide offsets source-maps&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1569&quot;&gt;CLJS-1569&lt;/a&gt;: IndexedSeq doesn&amp;#39;t implement IWithMeta / IMeta&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1567&quot;&gt;CLJS-1567&lt;/a&gt;: make-array macro missing &amp;gt; 2 arg arity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1571&quot;&gt;CLJS-1571&lt;/a&gt;: Make special-symbol? true for &amp;#39;var&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1555&quot;&gt;CLJS-1555&lt;/a&gt;: make-array macro missing 2 arg arity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-970&quot;&gt;CLJS-970&lt;/a&gt;: generate assert message when compiling&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1565&quot;&gt;CLJS-1565&lt;/a&gt;: Self-host: whitespace optimization is broken&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1541&quot;&gt;CLJS-1541&lt;/a&gt;: Self-host: Cannot require &amp;#39;cljs.js using cljs.jar&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1550&quot;&gt;CLJS-1550&lt;/a&gt;: Enhance docstring for extend-type wrt type-sym&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1551&quot;&gt;CLJS-1551&lt;/a&gt;: Self-host: assert-args dormant in macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1552&quot;&gt;CLJS-1552&lt;/a&gt;: doc for &amp;amp; should match fn&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1488&quot;&gt;CLJS-1488&lt;/a&gt;: cljs.repl/source Cannot read source of cljs functions that use #js reader&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1557&quot;&gt;CLJS-1557&lt;/a&gt;: Make special-symbol? return true for catch and finally&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1542&quot;&gt;CLJS-1542&lt;/a&gt;: Self-host: cljs/compile-str not handling errors properly&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1318&quot;&gt;CLJS-1318&lt;/a&gt;: Fix typo in documentation of &lt;code&gt;specify&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-620&quot;&gt;CLJS-620&lt;/a&gt;: Warnings are generated when using a macro in argument position&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1547&quot;&gt;CLJS-1547&lt;/a&gt;: Wrong output encoding when compile with goog.LOCALE&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1546&quot;&gt;CLJS-1546&lt;/a&gt;: cljs.core/run! does not always return nil&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 18 Mar 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.8.34</link></item></channel></rss>