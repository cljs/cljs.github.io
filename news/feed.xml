<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ClojureScript</title><description>ClojureScript News and Releases</description><link>http://cljsinfo.github.io/news</link><atom:link href="http://cljsinfo.github.io/news/feed.xml" rel="self" type="application/rss+xml" /><pubDate>Tue, 30 May 2017 23:38:49 GMT</pubDate><lastBuildDate>Tue, 30 May 2017 23:38:49 GMT</lastBuildDate><generator>(sitegen.news/rss-feed-xml)</generator><item><title>1.9.562 - Clojure 1.9.0-alpha17 parity</title><description>&lt;p&gt;This release coincides with Clojure 1.9.0-alpha17, includes a variety
of fixes, and updates both the Closure Compiler &amp;amp; Library dependencies.&lt;/p&gt;
&lt;p&gt;As always, feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2027&quot;&gt;CLJS-2027&lt;/a&gt;: Add language-in for ECMA 2017 and ECMA Next&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2026&quot;&gt;CLJS-2026&lt;/a&gt;: Add Compiler option for rewrite polyfills&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2021&quot;&gt;CLJS-2021&lt;/a&gt;: subvec throws when passed non-vector&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1884&quot;&gt;CLJS-1884&lt;/a&gt;: Give a chance to MetaFn to be removed by closure under :advanced
optimization Replace with-meta calls by -with-meta calls where possible&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2052&quot;&gt;CLJS-2052&lt;/a&gt;: Port new spec.alpha enhancements&lt;/li&gt;
&lt;li&gt;Update Google Closure Compiler dependency&lt;/li&gt;
&lt;li&gt;Update Google Closure Library dependency&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2053&quot;&gt;CLJS-2053&lt;/a&gt;: Regression: cljs.spec.alpha/any for fdef&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2039&quot;&gt;CLJS-2039&lt;/a&gt;: remove extraneous argument from ChunkBuffer.chunk&lt;/li&gt;
&lt;li&gt;Fix assumption that all closure-compliant JS is goog.*&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2035&quot;&gt;CLJS-2035&lt;/a&gt;: Self-host: Add map-entry-test to self-parity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2033&quot;&gt;CLJS-2033&lt;/a&gt;: set-validator! should check current state&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2008&quot;&gt;CLJS-2008&lt;/a&gt;: Self-host: backport fixes to threading macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2005&quot;&gt;CLJS-2005&lt;/a&gt;: Bad error message with duplicate arity function definitions&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2032&quot;&gt;CLJS-2032&lt;/a&gt;: Case macro expansion evaluates expression twice when no matching clause&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2023&quot;&gt;CLJS-2023&lt;/a&gt;: User supplied type hints stopped working on js/goog.DEBUG&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2020&quot;&gt;CLJS-2020&lt;/a&gt;: defmulti &amp;quot;miss&amp;quot; performance poor&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2034&quot;&gt;CLJS-2034&lt;/a&gt;: Sequence and Eduction produce infinite loop in transducer that appends to the reduction&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 26 May 2017 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.562</link></item><item><title>1.9.542 - spec changes & REPL enhancement</title><description>&lt;p&gt;This release is primarily about staying in sync with the latest changes to spec. It
also includes a small but significant enhancement to REPLs to allow handling multiple forms.&lt;/p&gt;
&lt;p&gt;As always, feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1572&quot;&gt;CLJS-1572&lt;/a&gt;: REPL doesn&amp;#39;t give error for expressions with too many right parentheses&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;cljs.spec -&amp;gt; cljs.spec.alpha&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2013&quot;&gt;CLJS-2013&lt;/a&gt; - Add MapEntry type&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2015&quot;&gt;CLJS-2015&lt;/a&gt;: Self-host: &lt;code&gt;defmacro&lt;/code&gt; should return the Var&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2017&quot;&gt;CLJS-2017&lt;/a&gt;: Upgrade Closure Compiler to latest April 2017 release&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-485&quot;&gt;CLJS-485&lt;/a&gt;: RegExp flags are being dropped by string/replace&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1518&quot;&gt;CLJS-1518&lt;/a&gt;: Case macro expansion evaluates expression twice&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2024&quot;&gt;CLJS-2024&lt;/a&gt;: Self-host: &lt;code&gt;find-ns-obj&lt;/code&gt; broken for namespaces with &amp;#39;a&amp;#39; as the first segment&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2028&quot;&gt;CLJS-2028&lt;/a&gt;: &lt;code&gt;realized?&lt;/code&gt; throws on LazyTransformer&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2010&quot;&gt;CLJS-2010&lt;/a&gt;: refer-clojure :rename throws on valid invocations&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2007&quot;&gt;CLJS-2007&lt;/a&gt;: Whitespace optimizations should respect :main option.&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 12 May 2017 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.542</link></item><item><title>1.9.521 - `async` issue resolved</title><description>&lt;p&gt;This release bumps Closure Compiler, finally resolving the issue with core.async.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1973&quot;&gt;CLJS-1973&lt;/a&gt;: Add support for &lt;code&gt;:npm-deps&lt;/code&gt; in upstream &lt;code&gt;deps.cljs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1968&quot;&gt;CLJS-1968&lt;/a&gt;: Enable calling JS modules that export a single function&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1960&quot;&gt;CLJS-1960&lt;/a&gt;: Require CommonJS modules directly from a ClojureScript namespace&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-2006&quot;&gt;CLJS-2006&lt;/a&gt;: Upgrade Closure Compiler to April 2017 release&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1497&quot;&gt;CLJS-1497&lt;/a&gt;: &lt;code&gt;find&lt;/code&gt; on an associative collection does not return collection key&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1996&quot;&gt;CLJS-1996&lt;/a&gt;: Support correct checking of :preloads when :optimizations not specified&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1994&quot;&gt;CLJS-1994&lt;/a&gt;: assoc on nil returns PHM (expected PAM)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1988&quot;&gt;CLJS-1988&lt;/a&gt;: add :npm-deps to recognized compiler options&lt;/li&gt;
&lt;li&gt;Fix tiny bug in index-node-modules when no second argument is given&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1985&quot;&gt;CLJS-1985&lt;/a&gt;: &lt;code&gt;index-node-modules&lt;/code&gt; should pass opts to &lt;code&gt;node-inputs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1987&quot;&gt;CLJS-1987&lt;/a&gt;: don&amp;#39;t index node modules blindly&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1519&quot;&gt;CLJS-1519&lt;/a&gt; Collection invoke errors report arity off by 1&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1964&quot;&gt;CLJS-1964&lt;/a&gt;: Validate that &lt;code&gt;:target :nodejs&lt;/code&gt; and no optimizations requires a &lt;code&gt;:main&lt;/code&gt; option to be present&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1956&quot;&gt;CLJS-1956&lt;/a&gt;: Add missing JS reserved keywords&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1983&quot;&gt;CLJS-1983&lt;/a&gt;: res -&amp;gt; mres in spec.cljs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1978&quot;&gt;CLJS-1978&lt;/a&gt;: port &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJ-2035&quot;&gt;CLJ-2035&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1979&quot;&gt;CLJS-1979&lt;/a&gt;: port &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJ-2043&quot;&gt;CLJ-2043&lt;/a&gt; (fix s/form of s/conformer)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1980&quot;&gt;CLJS-1980&lt;/a&gt;: port &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJ-2100&quot;&gt;CLJ-2100&lt;/a&gt; (s/nilable form should retain original spec form)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1976&quot;&gt;CLJS-1976&lt;/a&gt;: hash-map assoc stackoverflow&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1957&quot;&gt;CLJS-1957&lt;/a&gt;: Process JS modules errors and warnings don&amp;#39;t get printed&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1868&quot;&gt;CLJS-1868&lt;/a&gt; - Output simpler dependency rel paths when compiling with Closure libs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1967&quot;&gt;CLJS-1967&lt;/a&gt;: Missing ^boolean for removed-leaf? in THM impl&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Wed, 12 Apr 2017 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.521</link></item><item><title>1.9.494 - another bugfix release</title><description>&lt;p&gt;This is a bugfix release.&lt;/p&gt;
&lt;p&gt;As always, feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1948&quot;&gt;CLJS-1948&lt;/a&gt;: Possible race condition in compiler w/ parallel-build true&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1941&quot;&gt;CLJS-1941&lt;/a&gt;: &lt;code&gt;cljs.compiler/cljs-files-in&lt;/code&gt; shouldn&amp;#39;t return &lt;code&gt;.cljc&lt;/code&gt; files if a &lt;code&gt;.cljs&lt;/code&gt; file exists for the namespace&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1940&quot;&gt;CLJS-1940&lt;/a&gt;: Undeclared var warning when invoking a protocol method on a &lt;code&gt;js&lt;/code&gt; interop form&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1951&quot;&gt;CLJS-1951&lt;/a&gt;: Missing 0 and 1 arity versions of interleave&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1952&quot;&gt;CLJS-1952&lt;/a&gt;: Bump Closure Compiler to Feb 2017 release&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1937&quot;&gt;CLJS-1937&lt;/a&gt;: Self-host: undeclared cljs.core$macros/mod when compiling cljs/core.cljs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1936&quot;&gt;CLJS-1936&lt;/a&gt;: cljs.analyzer declares vars which are only used in Clojure&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1949&quot;&gt;CLJS-1949&lt;/a&gt;: Self-host: cljs.compiler/munge doesn&amp;#39;t preserve JVM compiler semantics&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1950&quot;&gt;CLJS-1950&lt;/a&gt;: Eliminate instances of #^&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1943&quot;&gt;CLJS-1943&lt;/a&gt;: Self-host: &lt;code&gt;cljs.pprint&lt;/code&gt;&amp;#39;s macros can&amp;#39;t be compiled&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1945&quot;&gt;CLJS-1945&lt;/a&gt;: cljs.spec/every-impl kind-fn kind-form dead code&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1944&quot;&gt;CLJS-1944&lt;/a&gt;: Can&amp;#39;t spec generate non-vector collections&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1946&quot;&gt;CLJS-1946&lt;/a&gt;: Self-hosted: don&amp;#39;t emit &lt;code&gt;goog.require&lt;/code&gt; calls for foreign libs if optimizations different than &lt;code&gt;:none&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1636&quot;&gt;CLJS-1636&lt;/a&gt;: Mark some symbols in core macros ns as private&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1939&quot;&gt;CLJS-1939&lt;/a&gt;: Fix Node load_file call for foreign-deps&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1942&quot;&gt;CLJS-1942&lt;/a&gt;: Self-host: &lt;code&gt;cljs.env.macros&lt;/code&gt; and &lt;code&gt;cljs.analyzer.macros&lt;/code&gt; can&amp;#39;t be loaded&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1935&quot;&gt;CLJS-1935&lt;/a&gt;: When calling cljs.spec/valid?, subsequent predicates of cljs.spec/and are evaluated even when early predicate is unsatisfied&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 24 Feb 2017 06:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.494</link></item><item><title>1.9.473 - bugfix release</title><description>&lt;p&gt;This is a bugfix release.&lt;/p&gt;
&lt;p&gt;As always, feedback welcome!&lt;/p&gt;
&lt;h2 id=&quot;fixes&quot;&gt;Fixes&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1931&quot;&gt;CLJS-1931&lt;/a&gt;: Closure Compiler {{--generate_exports}} flag not supported&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1934&quot;&gt;CLJS-1934&lt;/a&gt;: Self-host: require-macros :reload / :reload-all fails&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1932&quot;&gt;CLJS-1932&lt;/a&gt;: Self-host: Perf regression macroexpand-check&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1930&quot;&gt;CLJS-1930&lt;/a&gt;: Master broken wrt static field: ES5_STRICT_UNCOMMON&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1929&quot;&gt;CLJS-1929&lt;/a&gt;: When expanding libs don&amp;#39;t include Hidden files&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1905&quot;&gt;CLJS-1905&lt;/a&gt;: Self-host: Stacktraces for script/test-self-parity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1795&quot;&gt;CLJS-1795&lt;/a&gt;: Support more options in the &lt;code&gt;:closure-warnings&lt;/code&gt; compiler option&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1922&quot;&gt;CLJS-1922&lt;/a&gt;: Use :file as relative output path for foreign-libs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1831&quot;&gt;CLJS-1831&lt;/a&gt;: Self-host: Improperly munge ns names&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1925&quot;&gt;CLJS-1925&lt;/a&gt;: Use of undeclared Var cljs.user/RegExp when extending protocol for RegExp&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1920&quot;&gt;CLJS-1920&lt;/a&gt;: cljs.build.api/node-inputs: package.json files are only added if module entries are top-leve&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1916&quot;&gt;CLJS-1916&lt;/a&gt;: &lt;code&gt;__dirname&lt;/code&gt; and &lt;code&gt;__filename&lt;/code&gt; are not defined when compiling for Node.js with optimizations :none&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1915&quot;&gt;CLJS-1915&lt;/a&gt;: cljs.test: Index out of bounds for stack element w/o line/column&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Sat, 11 Feb 2017 06:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.473</link></item><item><title>1.9.456 - Externs Inference & Comprehensive JS Modules Support</title><description>&lt;p&gt;This is a significant feature release.&lt;/p&gt;
&lt;p&gt;The first new feature is externs inference. This should greatly ease
the integration of 3rd party JavaScript libraries incompatible
with Google Closure advanced compilation. By treating the externs
problem as a type-hinting one - we can automatically generate the
required externs for you. This new feature should be considered
of alpha quality and subject to change. Still, feedback is greatly
appreciated to help us better understand how to best deliver this
enhancement.&lt;/p&gt;
&lt;p&gt;For details please look at the new guide:&lt;br&gt;
&lt;a href=&quot;https://clojurescript.org/guides/externs&quot;&gt;https://clojurescript.org/guides/externs&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The second new feature is much more comprehensive support for
JavaScript modules. We now have a good story for integrating the
various kinds of JavaScript modules into a ClojureScript project
build without resorting to JavaScript build tools. This feature
even includes the consumption of modules directly from NPM.&lt;/p&gt;
&lt;p&gt;There are far too many details to cover in this release announcement
so once again refer to the guide:&lt;br&gt;
&lt;a href=&quot;https://clojurescript.org/guides/javascript-modules&quot;&gt;https://clojurescript.org/guides/javascript-modules&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Like externs inference this feature is alpha and subject to change.
Again feedback is critical to guiding this enhancement in the
right direction.&lt;/p&gt;
&lt;p&gt;I&amp;#39;d like to especially call out Maria Geller&amp;#39;s Google Summer of Code work
here around these two major features. This work began almost 2 years
and it&amp;#39;s nice to see the long term planning come together so well.&lt;/p&gt;
&lt;p&gt;There are quite a few performancement enhancements in this release
related to compiler startup time as well as numerous fixes from
many members of the community.&lt;/p&gt;
&lt;p&gt;Congratulations to everyone involved and happy hacking!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Enhanced JavaScript module support&lt;/li&gt;
&lt;li&gt;Support Node resolution for CommonJS modules&lt;/li&gt;
&lt;li&gt;Externs inference&lt;/li&gt;
&lt;li&gt;Performance enhancements&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1835&quot;&gt;CLJS-1835&lt;/a&gt;: REPL load special fn&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1194&quot;&gt;CLJS-1194&lt;/a&gt;: Support for &lt;code&gt;data_readers.cljc&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;expose :closure-module-roots option&lt;/li&gt;
&lt;li&gt;bump Closure Compiler dep&lt;/li&gt;
&lt;li&gt;Under Node.js don&amp;#39;t need require entries in the goog.addDependency calls in cljs_deps.js&lt;/li&gt;
&lt;li&gt;do not throw on circular dependencies between Google Closure JS libs&lt;/li&gt;
&lt;li&gt;str macro should call str/1 function directly, added str benchmark&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1718&quot;&gt;CLJS-1718&lt;/a&gt;: Foreign lib files should be placed in a relative location&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1858&quot;&gt;CLJS-1858&lt;/a&gt;: Should allow &lt;code&gt;:cache-analysis true&lt;/code&gt; and &lt;code&gt;cache-analysis-format nil&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1616&quot;&gt;CLJS-1616&lt;/a&gt;: Self-host: improve documentation for compile-str&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1643&quot;&gt;CLJS-1643&lt;/a&gt;: Emit more informative error when emitting a type which has no emit multimethod case&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1816&quot;&gt;CLJS-1816&lt;/a&gt;: Basic timing info in verbose output&lt;/li&gt;
&lt;li&gt;add support for emitting inferred externs file&lt;/li&gt;
&lt;li&gt;add cljs.analyzer/analyze-form-seq&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1666&quot;&gt;CLJS-1666&lt;/a&gt;: Flag to optionally disable transit analysis cache encoding&lt;/li&gt;
&lt;li&gt;Provide more descriptive error message when invalid libspec detected&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1768&quot;&gt;CLJS-1768&lt;/a&gt;: cljs.spec perf tweaks&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1842&quot;&gt;CLJS-1842&lt;/a&gt;: Remove analyzer &lt;code&gt;:merge&lt;/code&gt; hack for REPLs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1839&quot;&gt;CLJS-1839&lt;/a&gt;: Relax the constraint that &lt;code&gt;new&lt;/code&gt; and dot forms must be passed a symbol&lt;/li&gt;
&lt;li&gt;default to :ecmascript3 if :language-out not specified for :es6 module&lt;/li&gt;
&lt;li&gt;respect :language-out when processing ES6 modules&lt;/li&gt;
&lt;li&gt;default to :ecmascript3 if :language-out not specified for :es6 module&lt;/li&gt;
&lt;li&gt;inline some?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1911&quot;&gt;CLJS-1911&lt;/a&gt;: Need to bind Node.js require&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1909&quot;&gt;CLJS-1909&lt;/a&gt;: Self-host: circular dependency when requiring cljs.reader&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1906&quot;&gt;CLJS-1906&lt;/a&gt;: Self-host: script/test-self-parity fails&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1903&quot;&gt;CLJS-1903&lt;/a&gt;: Remove anonymous vars from dir and apropos output&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1897&quot;&gt;CLJS-1897&lt;/a&gt;: Too many externs generated&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1895&quot;&gt;CLJS-1895&lt;/a&gt;: Externs inference needs to support user supplied externs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1873&quot;&gt;CLJS-1873&lt;/a&gt;: Self-host: Unit tests fail owing to test.check dep&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1874&quot;&gt;CLJS-1874&lt;/a&gt;: Self-host: :fn-var true for macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1877&quot;&gt;CLJS-1877&lt;/a&gt;: :foreign-libs entries should be allowed to specify directories along with individual files&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1890&quot;&gt;CLJS-1890&lt;/a&gt;: s/form for s/nilable in cljs.spec does not match clojure.spec&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1811&quot;&gt;CLJS-1811&lt;/a&gt;: Can&amp;#39;t compose cljs.spec.test.instrument (or cljs.spec.test.check) with cljs.spec.test.enumerate-namespace&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1894&quot;&gt;CLJS-1894&lt;/a&gt;: Unnecessary analysis of core.cljs on first compile&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1893&quot;&gt;CLJS-1893&lt;/a&gt;: Unnecessary analysis of core.cljs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1892&quot;&gt;CLJS-1892&lt;/a&gt;: Dependencies in JARs are analyzed every time even if an analysis cache file exists&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1887&quot;&gt;CLJS-1887&lt;/a&gt;: add :watch-error-fn option&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1883&quot;&gt;CLJS-1883&lt;/a&gt; Foreign libs can&amp;#39;t be found on Node.js&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1882&quot;&gt;CLJS-1882&lt;/a&gt; Fix constant table sort order when using :modules&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1853&quot;&gt;CLJS-1853&lt;/a&gt;: var metadata in compiled output&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1878&quot;&gt;CLJS-1878&lt;/a&gt;: prefer &lt;code&gt;some?&lt;/code&gt; over &lt;code&gt;(not (nil? %))&lt;/code&gt; in analyzer&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1880&quot;&gt;CLJS-1880&lt;/a&gt;: missing ^boolean on some hasNext calls&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1875&quot;&gt;CLJS-1875&lt;/a&gt; Difference in seqable? between CLJ &amp;amp; CLJS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1829&quot;&gt;CLJS-1829&lt;/a&gt;: get does not return not-found on negative indexes&lt;/li&gt;
&lt;li&gt;cljs.spec.test/unstrument shouldn&amp;#39;t return the names of vars that weren&amp;#39;t instrumented in the first place. Fixes &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1812&quot;&gt;CLJS-1812&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1786&quot;&gt;CLJS-1786&lt;/a&gt;: Add knob for controlling printing of namespaced maps&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1836&quot;&gt;CLJS-1836&lt;/a&gt;: nth doesn&amp;#39;t throw for IndexedSeqs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1870&quot;&gt;CLJS-1870&lt;/a&gt;: Quoted specs check in require macro symbols&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1869&quot;&gt;CLJS-1869&lt;/a&gt;: Regression importing goog.Uri&lt;/li&gt;
&lt;li&gt;Fix &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1653&quot;&gt;CLJS-1653&lt;/a&gt; regression&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1860&quot;&gt;CLJS-1860&lt;/a&gt;: Resolve JS modules referred by their fully-qualified namespace&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1861&quot;&gt;CLJS-1861&lt;/a&gt;: Use usr/bin/env in build scripts for portability&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1857&quot;&gt;CLJS-1857&lt;/a&gt;: Fix self-host tests&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1855&quot;&gt;CLJS-1855&lt;/a&gt;: Subvec should implement IIterable&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1856&quot;&gt;CLJS-1856&lt;/a&gt;: Self-host: load-deps doesn&amp;#39;t delegate to itself&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1651&quot;&gt;CLJS-1651&lt;/a&gt;: Self-host: Cannot replace core macro-function&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1848&quot;&gt;CLJS-1848&lt;/a&gt;: Analyzer can&amp;#39;t find JS modules during macro-expansion&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1851&quot;&gt;CLJS-1851&lt;/a&gt;: Only output JS module processing time when &lt;code&gt;:compiler-stats&lt;/code&gt; is true&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1850&quot;&gt;CLJS-1850&lt;/a&gt;: &lt;em&gt;unchecked-if&lt;/em&gt; not declared ^:dynamic warning after commit a732f0&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1849&quot;&gt;CLJS-1849&lt;/a&gt;: Self-host: regression introduced by &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1794&quot;&gt;CLJS-1794&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1844&quot;&gt;CLJS-1844&lt;/a&gt;: port over Maria Geller&amp;#39;s externs file parsing code&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1845&quot;&gt;CLJS-1845&lt;/a&gt;: Assoc on subvec should throw if out of bounds&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1847&quot;&gt;CLJS-1847&lt;/a&gt;: REPL should recognize &lt;code&gt;clojure.core/load&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1745&quot;&gt;CLJS-1745&lt;/a&gt;: refer-clojure doesn&amp;#39;t pull in previously excluded vars&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1794&quot;&gt;CLJS-1794&lt;/a&gt;: incomplete alias created for namespace cljs.spec warning under advanced compilation&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1834&quot;&gt;CLJS-1834&lt;/a&gt;: REPL regression, require of ns from the ns itself errors out in circular reference&lt;/li&gt;
&lt;li&gt;fix ns aliasing regression for JS namespaces&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1837&quot;&gt;CLJS-1837&lt;/a&gt;: Port halt-when over from Clojure&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1820&quot;&gt;CLJS-1820&lt;/a&gt;: &amp;quot;No such namespace&amp;quot; warning when referring to JS module namespace without using alias&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1828&quot;&gt;CLJS-1828&lt;/a&gt;: Add &lt;code&gt;:rename&lt;/code&gt; to &lt;code&gt;require&lt;/code&gt;&amp;#39;s docstring&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 27 Jan 2017 06:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.456</link></item><item><title>1.9.293</title><description>&lt;p&gt;This release fixes a major issue with transit analysis caching where
files were leaked. It also includes a very significant compiler
enhancement thanks to Antonio Monteiro - you can now create
ClojureScript files without declaring a namespace. This opens the door
to making a much larger class of Clojure programs portable to
ClojureScript. &lt;code&gt;require&lt;/code&gt; and other ns related macros are now available
granted that they appear at the top of the file. Please take careful
note that they are not functions and cannot be used in dynamic
situations. Still this eases writing simple scripts and the door is
now open to finally support data literals in a comprehensive way.&lt;/p&gt;
&lt;p&gt;We also bumped the Google Closure compiler dependency. Please note
that Closure Compiler has made breaking changes around JS module
processing so this version of ClojureScript is pinned to this latest
release.&lt;/p&gt;
&lt;p&gt;A huge thanks to the many people old and new that contributed to this
release.&lt;/p&gt;
&lt;p&gt;As always, feedback is most welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1346&quot;&gt;CLJS-1346&lt;/a&gt;: Support require outside of ns&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1762&quot;&gt;CLJS-1762&lt;/a&gt;: Bump Closure Compiler, refactor module support&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1658&quot;&gt;CLJS-1658&lt;/a&gt;: testing for protocol membership may return false positives&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1536&quot;&gt;CLJS-1536&lt;/a&gt;: REPL def symbol init collision&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1805&quot;&gt;CLJS-1805&lt;/a&gt;: Source map should take false&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1804&quot;&gt;CLJS-1804&lt;/a&gt;: Self-host: process namespace side-effects for new require without NS&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1803&quot;&gt;CLJS-1803&lt;/a&gt;: Use new require capability in REPLs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1796&quot;&gt;CLJS-1796&lt;/a&gt;: Measure Google Closure specific optimization time&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1782&quot;&gt;CLJS-1782&lt;/a&gt;: Self-host: allow namespaces to require their own macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1563&quot;&gt;CLJS-1563&lt;/a&gt;: :source-map option to cljs.build.api/build should take nil&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1785&quot;&gt;CLJS-1785&lt;/a&gt;: Warn on reference to js/foo shadowed by local binding&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;make String an implicit ns like Math. revert char? and clarify docstring. add unit tests for char?&lt;/li&gt;
&lt;li&gt;fix cljs.spec.test/check docstring&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1826&quot;&gt;CLJS-1826&lt;/a&gt;: Self-host: load-deps doesn&amp;#39;t honor &lt;code&gt;:reload&lt;/code&gt; and &lt;code&gt;reload-all&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1825&quot;&gt;CLJS-1825&lt;/a&gt;: :source-map error when passing &lt;code&gt;false&lt;/code&gt; under simple optimizations&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1821&quot;&gt;CLJS-1821&lt;/a&gt;: &lt;code&gt;add-preloads&lt;/code&gt; should only touch sources if &lt;code&gt;:preloads&lt;/code&gt; option specified&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1814&quot;&gt;CLJS-1814&lt;/a&gt;: Move docstrings for require, etc. from &lt;code&gt;cljs.repl&lt;/code&gt; to their new definitions in &lt;code&gt;cljs.core&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1809&quot;&gt;CLJS-1809&lt;/a&gt;: Add 0/1 arity to &lt;code&gt;into&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1824&quot;&gt;CLJS-1824&lt;/a&gt;: transit cache feature leaks files&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1294&quot;&gt;CLJS-1294&lt;/a&gt;: Let macroexpand(-1) accept any quoted argument.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1818&quot;&gt;CLJS-1818&lt;/a&gt;: (hash false) returns different value from Clojure&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1817&quot;&gt;CLJS-1817&lt;/a&gt;: Strange result when assoc&amp;#39;ing 0 to persistent hash map&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1815&quot;&gt;CLJS-1815&lt;/a&gt;: Fix failing analyzer tests&lt;/li&gt;
&lt;li&gt;follow-up on &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-460&quot;&gt;CLJS-460&lt;/a&gt; defmulti ignores optional :hierarchy argument&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1807&quot;&gt;CLJS-1807&lt;/a&gt;: Better error messages for &lt;code&gt;ns*&lt;/code&gt; calls&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1802&quot;&gt;CLJS-1802&lt;/a&gt;: Generated namespaces should be of the form &lt;code&gt;cljs.user.fileXXXX&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJ-1935&quot;&gt;CLJ-1935&lt;/a&gt;: Use multimethod dispatch value method lookup to take hierarchies into account in multi-spec&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1682&quot;&gt;CLJS-1682&lt;/a&gt; :foreign-libs with module conversion does not works properly if it is used form deps.cljs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1710&quot;&gt;CLJS-1710&lt;/a&gt;: spec/double-in not implemented&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1787&quot;&gt;CLJS-1787&lt;/a&gt;: Make cljs.spec explain pluggable&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1781&quot;&gt;CLJS-1781&lt;/a&gt;: Add cljs.hash-map-test to self-parity tests&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1788&quot;&gt;CLJS-1788&lt;/a&gt;: Port &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJ-2004&quot;&gt;CLJ-2004&lt;/a&gt;: include retag in multi-spec form&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1765&quot;&gt;CLJS-1765&lt;/a&gt;: Empty iterator for hash maps with nil key&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1784&quot;&gt;CLJS-1784&lt;/a&gt;: nth doesn&amp;#39;t throw on strings or arrays&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1773&quot;&gt;CLJS-1773&lt;/a&gt;: Self-host: Don&amp;#39;t resolve unqualified symbols / keywords with $macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1770&quot;&gt;CLJS-1770&lt;/a&gt;: goog-defines broken for integers&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1600&quot;&gt;CLJS-1600&lt;/a&gt;: Destructuring defprotocol fn args causes defrecord impls to silently fail&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1335&quot;&gt;CLJS-1335&lt;/a&gt;: resolve-macro-var: information missing for macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1633&quot;&gt;CLJS-1633&lt;/a&gt;: Improve error associated with invalid foreign-libs :file path&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1775&quot;&gt;CLJS-1775&lt;/a&gt;: &lt;code&gt;get&lt;/code&gt; with &lt;code&gt;nil&lt;/code&gt; returns as if &lt;code&gt;get&lt;/code&gt; with &lt;code&gt;0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1780&quot;&gt;CLJS-1780&lt;/a&gt;: Records without extmaps fail to iterate&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1774&quot;&gt;CLJS-1774&lt;/a&gt;: Self-host: Report filenames in warns in test-self-parity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1779&quot;&gt;CLJS-1779&lt;/a&gt;: keyword 2-arity constructor accepts anything for both parameters which leads to different hashing&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Wed, 19 Oct 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.293</link></item><item><title>1.9.229 - cljs.spec fixes</title><description>&lt;p&gt;A bug fix release for cljs.spec and a REPL regression.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1759&quot;&gt;CLJS-1759&lt;/a&gt;: Errors writing transit analysis cache if parallel build&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1760&quot;&gt;CLJS-1760&lt;/a&gt;: Self-host: test-cljs-1757 failing in test-self-parity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1751&quot;&gt;CLJS-1751&lt;/a&gt;: port fix lost type hints in map destructuring&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1756&quot;&gt;CLJS-1756&lt;/a&gt;: Add test.check JAR to the bootstrap script&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1757&quot;&gt;CLJS-1757&lt;/a&gt;: cljs.spec/exercise-fn doesn&amp;#39;t work when passed a quoted symbol&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1754&quot;&gt;CLJS-1754&lt;/a&gt;: Add boolean? generator&lt;/li&gt;
&lt;li&gt;fix REPL regression which removed warnings&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1763&quot;&gt;CLJS-1763&lt;/a&gt;: Defining a var that clashes &lt;code&gt;cljs.core&lt;/code&gt; throws a compiler error instead of warning&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1772&quot;&gt;CLJS-1772&lt;/a&gt;: Dependency index can incorrectly overwrite &lt;code&gt;.cljs&lt;/code&gt; files with &lt;code&gt;.cljc&lt;/code&gt; files if both are present&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 19 Aug 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.229</link></item><item><title>1.9.216 - cljs.spec fixes</title><description>&lt;p&gt;This release addresses a few bugs around cljs.spec discovered in the
last release along with relevant fixes for self-hosted ClojureScript.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1746&quot;&gt;CLJS-1746&lt;/a&gt;: Log the result of loading a dependency&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1657&quot;&gt;CLJS-1657&lt;/a&gt;: Self-host: Implicit macro loading with alias&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1742&quot;&gt;CLJS-1742&lt;/a&gt;: Add docstring for new refer-clojure REPL special&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1274&quot;&gt;CLJS-1274&lt;/a&gt;: Allow assignment to namespace-qualified names in current namespace&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1744&quot;&gt;CLJS-1744&lt;/a&gt;: rest produces nil for larger maps&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1740&quot;&gt;CLJS-1740&lt;/a&gt;: Self-host: Need to port more of &lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1733&quot;&gt;CLJS-1733&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1741&quot;&gt;CLJS-1741&lt;/a&gt;: Add :rename to :refer-clojure in ns docstring&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1737&quot;&gt;CLJS-1737&lt;/a&gt;: Self-host: clojure alias implicit macro use regression&lt;/li&gt;
&lt;li&gt;invalid cljs.spec/merge res call&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1739&quot;&gt;CLJS-1739&lt;/a&gt;: seq on map literal with 9 elements leads to rest producing nil&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1738&quot;&gt;CLJS-1738&lt;/a&gt;: Self-host: need to update call to check-use-macros-inferring-missing&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Mon, 15 Aug 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.216</link></item><item><title>1.9.198 - cljs.spec, core ns aliasing, macro inference, :rename, and more!</title><description>&lt;p&gt;This release brings cljs.spec to parity with Clojure
1.9.0-alpha10. This release also includes a large number of
enhancements to the ns form:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;:refer now features macro inference. There is no longer any need
to supply both :refer and :refer-macros in the same :require, the
compiler will figure it out.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;clojure.* namespaces will now automatically be aliased to their
ClojureScript equivalents. For example this means that the following
is perfectly valid ClojureScript:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&quot;lang-clj&quot;&gt;(&lt;span class=&quot;hljs-name&quot;&gt;&lt;span class=&quot;hljs-builtin-name&quot;&gt;ns&lt;/span&gt;&lt;/span&gt; foo.bar
  (&lt;span class=&quot;hljs-symbol&quot;&gt;:require&lt;/span&gt; [clojure.spec &lt;span class=&quot;hljs-symbol&quot;&gt;:refer&lt;/span&gt; [fspec]]))
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;  This feature and the previous one should significantly reduce reader
  conditional usage in ns forms.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;thanks to Antonio Monteiro we now support :rename&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We also have a new feature that is relevant for tooling such as
Figwheel and cljs-devtools - :preloads. This should now be the
standard way to inject some bit of side-effecting setup after core but
before user code (i.e. connecting REPLs to standard ports, etc.).&lt;/p&gt;
&lt;p&gt;There are of course many various small fixes and enhancements, so
a very big thank you to everyone that has contributed.&lt;/p&gt;
&lt;p&gt;As always feedback welcome!&lt;/p&gt;
&lt;h3 id=&quot;enhancements&quot;&gt;Enhancements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1508&quot;&gt;CLJS-1508&lt;/a&gt;: Extend ns form to support :rename option&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1507&quot;&gt;CLJS-1507&lt;/a&gt;: Implicit macro loading: macro var inference in :refer&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1692&quot;&gt;CLJS-1692&lt;/a&gt;: Autoalias clojure.&lt;em&gt; to exisiting cljs.&lt;/em&gt; namespaces if
possible&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1350&quot;&gt;CLJS-1350&lt;/a&gt;: Compiler support for browser REPL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1729&quot;&gt;CLJS-1729&lt;/a&gt;: Support &lt;code&gt;use&lt;/code&gt; special function in REPLs&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1730&quot;&gt;CLJS-1730&lt;/a&gt;: Support &lt;code&gt;refer-clojure&lt;/code&gt; special function in REPLs&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;changes&quot;&gt;Changes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1515&quot;&gt;CLJS-1515&lt;/a&gt;: Self-host: Allow :file key in cljs.js/&lt;em&gt;load-fn&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;add toString implementation to Vars&lt;/li&gt;
&lt;li&gt;Use a js array to create collections in cljs.reader&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1640&quot;&gt;CLJS-1640&lt;/a&gt;: Use the unshaded version of the closure compiler&lt;/li&gt;
&lt;li&gt;add :browser-repl to list of known opts&lt;/li&gt;
&lt;li&gt;add browser REPL preload&lt;/li&gt;
&lt;li&gt;parity with Clojure 1.9.0-alpha10 clojure.spec&lt;/li&gt;
&lt;li&gt;bump to tools.reader 1.0.0-beta3&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;fixes&quot;&gt;Fixes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1733&quot;&gt;CLJS-1733&lt;/a&gt;: Macro inference issue for macros &amp;amp; runtime vars with the same name&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1735&quot;&gt;CLJS-1735&lt;/a&gt;: Self-host: cljs.spec speced-vars instance&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1736&quot;&gt;CLJS-1736&lt;/a&gt;: cljs.spec.test: checkable-syms* called with 0-arity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1708&quot;&gt;CLJS-1708&lt;/a&gt;: Self-host: [iu]nstrument-1 needs to qualify [iu]nstrument-1*&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1707&quot;&gt;CLJS-1707&lt;/a&gt;: Self-host: with-instrument-disabled needs to qualify &lt;em&gt;instrument-enabled&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1732&quot;&gt;CLJS-1732&lt;/a&gt;: Add docstrings for new use and use-macros REPL specials&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1720&quot;&gt;CLJS-1720&lt;/a&gt;: Qualify symbols and namespaced keywords in spec macros&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1731&quot;&gt;CLJS-1731&lt;/a&gt;: Self-host: do_template problem with script/test-self-parity&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1556&quot;&gt;CLJS-1556&lt;/a&gt;: Invalid code emit for obj literal&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1607&quot;&gt;CLJS-1607&lt;/a&gt;: bug with &lt;code&gt;specify!&lt;/code&gt; in JS prototypes with &lt;code&gt;static-fns&lt;/code&gt; true&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1591&quot;&gt;CLJS-1591&lt;/a&gt; avoid analyzing invoke arguments multiple times&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1638&quot;&gt;CLJS-1638&lt;/a&gt;: :elide-asserts disables atom validators in :advanced&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1721&quot;&gt;CLJS-1721&lt;/a&gt;: 3-arity get-in fails on types which do not implement ILookup&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1728&quot;&gt;CLJS-1728&lt;/a&gt;: Update doc for ns for new :rename capability&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1727&quot;&gt;CLJS-1727&lt;/a&gt;: Regression when evaluating non-sequential forms at the REPL&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1490&quot;&gt;CLJS-1490&lt;/a&gt;: Watch macro files in cljs.build.api/watch&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1719&quot;&gt;CLJS-1719&lt;/a&gt;: Port destructuring namespaced keys and symbols&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1653&quot;&gt;CLJS-1653&lt;/a&gt;: cljs.spec: keys* causes exception&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1700&quot;&gt;CLJS-1700&lt;/a&gt;: Support clojure.* aliasing when not in vector&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1717&quot;&gt;CLJS-1717&lt;/a&gt; remove map from equiv-map&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1716&quot;&gt;CLJS-1716&lt;/a&gt;: No longer possible to use same alias for :require-macros and :require&lt;/li&gt;
&lt;li&gt;Use keyword options in js-&amp;gt;clj 1-arg impl&lt;/li&gt;
&lt;li&gt;Add support for regex in transit for compiler analysis cache&lt;/li&gt;
&lt;li&gt;Escape non-Latin1 characters before base64 encoding the source-map string&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1698&quot;&gt;CLJS-1698&lt;/a&gt;: cljs.spec: every res call needs &amp;amp;env&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1695&quot;&gt;CLJS-1695&lt;/a&gt;: Self-host: Port cljs / clojure namespace aliasing&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1697&quot;&gt;CLJS-1697&lt;/a&gt;: doc on inferred macros fails&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1699&quot;&gt;CLJS-1699&lt;/a&gt;: Update docstring for ns&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://dev.clojure.org/jira/browse/CLJS-1694&quot;&gt;CLJS-1694&lt;/a&gt;: Self-host: Port macro var inference in :refer&lt;/li&gt;
&lt;/ul&gt;
</description><pubDate>Fri, 12 Aug 2016 05:00:00 GMT</pubDate><link>http://cljsinfo.github.io/news/1.9.198</link></item></channel></rss>